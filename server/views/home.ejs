<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="/pub/materialize.css">
    <script src="/pub/materialize.js"></script>
    <script src="/pub/axios.js"></script>

    <title>Hermes project</title>

    <style>
        body {
            display: flex;
            min-height: 100vh;
            flex-direction: column;
        }

        main {
            flex: 1 0 auto;
        }

        
        .row .col {
            /* border: 1px solid lightgrey */
            
        }
        
        .footer-copyright {
            padding: 3px;
        }
    </style>
</head>
<body>
<%- include('header') %>

<main class="container">
    <h4>Send anonymous SMS over TOR!</h4>
    <br>
    <div class="divider"></div>
    <div class="row">
        <!--

            demo message form
        -->
        <div class="col s12 m6 l6">
            <p class="flow-text">Demo. Requires javascript.</p>

            <div class="input-field ">
                <input id="from" type="text" class="validate" maxlength="11">
                <label for="from">From (can be anything, non numeric, max 11 chars)</label>
            </div>

            <div class="input-field">
                <input id="to" type="text" class="validate" maxlength="64">
                <label for="to">To. Receipt phone number (in international format)</label>
            </div>

            <div class="input-field">
                <textarea id="text" class="materialize-textarea" maxlength="160"></textarea>
                <label for="text">Text message. GSM-7 encoded. Max 160 chars. Multines supported.</label>
            </div>
            
            <div class="btn green darken-2 waves-effect waves-light" onclick="sendMessage()">Send</div>

        </div>

        <!-- 

            registration form
        -->
        <div class="col s12 m6 l6">

            <p class="flow-text">Sign up and use the API for free.</p>
            <form action="/auth/register" method="POST">

                <div class="input-field ">
                    <input id="usr" name="username" type="text" maxlength="128" minlength="3" required
                        value="<%= (typeof original === 'undefined' ? '' : original.username)  %>">
                    <label for="usr">Username. Min 3 chars, max 128 chars.</label>
                </div>

                <div class="input-field">
                    <input id="pss" name="password" type="password" maxlength="64" minlength="5" required
                        value="">
                    <label for="pss">Password. Min 5 chars, max 64 chars.</label>
                </div>
                <div class="row">
                    <div class="col s6">
                        <%- captcha_reg %>
                    </div>
                    <div class="col s6">
                        <div class="input-field">
                            <input id="captcha_reg" name="captcha_reg" type="text" maxlength="5" minlength="5" required>
                            <label for="captcha_reg">Captcha image. CASE-SENSITIVE!</label>
                        </div>

                        <button class="btn green darken-2 waves-effect waves-light"> Register</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    
</main>

<%- include('footer') %>

<script>
    const _ = function(el){
        return document.getElementById(el)
    }

    const toast = function(m){
        M.toast({html:m})
    }

    <%- include('global/errors') %>

    const clearFields = function(){
        _('from').value = ''
        _('to').value = ''
        _('text').value = ''

        M.textareaAutoResize(_('text'))
    }

    const sendMessage = function(){
        toast("sending message...")

        let from = _('from').value
        let to = _('to').value
        let text = _('text').value

        axios.post('/api/send', {
            from, to, text
        })
        .then(res=>{
            toast("message sent!")
            clearFields()
        })
        .catch(e=>{
            let r = e.response

            if(r.status === 422)
                r.data.errors.forEach(item=>toast(item.message ? item.message : item))
            else {
                toast("Internal error occurred. Try again later")
                console.log(r.data)
            }
        })
    }
</script>

</body>
</html>
